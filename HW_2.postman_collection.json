{
	"info": {
		"_postman_id": "00ce1a22-944e-4df3-b388-319449d6e74b",
		"name": "HW_2",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json",
		"_exporter_id": "28149167"
	},
	"item": [
		{
			"name": "first",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"This is the first responce from server!ss\");\r",
							"});\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": "{{url}}/first"
			},
			"response": []
		},
		{
			"name": "{{url}}",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": []
				},
				"url": "{{url}}"
			},
			"response": []
		},
		{
			"name": "get_method",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": []
				},
				"url": {
					"raw": "{{url}}/get_method?age=10&name=Graf",
					"host": [
						"{{url}}"
					],
					"path": [
						"get_method"
					],
					"query": [
						{
							"key": "age",
							"value": "10"
						},
						{
							"key": "name",
							"value": "Graf"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "new data",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"var resp_age = jsonData.age\r",
							"\r",
							"var req = request.data\r",
							"var reqAge = +req.age\r",
							"\r",
							"var reqUrl = pm.request.url.query.toObject();\r",
							"\r",
							"console.log(\"reqUrl = \" + reqUrl.name)\r",
							"console.log(\"Resp_age = \" + resp_age)\r",
							"console.log(\"Req_age = \" + req.age)\r",
							"\r",
							"pm.test(\"Req_res_AGE_test\", function(){\r",
							"    pm.expect(resp_age).to.eql(reqAge);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "kirill",
							"type": "text"
						},
						{
							"key": "age",
							"value": "9",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "7",
							"type": "text"
						},
						{
							"key": "auth_token",
							"value": "{{token}}",
							"type": "text"
						}
					]
				},
				"url": "{{url}}/new_data"
			},
			"response": []
		},
		{
			"name": "user_info 2",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"var resp = pm.response.json();\r",
							"var req = request.data\r",
							"\r",
							"pm.test(\"1-5\", function () {\r",
							"    pm.expect(+resp[\"qa_salary_after_1.5_year\"]).to.eql(req.salary * 3.3);\r",
							"});\r",
							"\r",
							"pm.test(\"3-5\", function () {\r",
							"    pm.expect(+resp[\"qa_salary_after_3.5_years\"]).to.eql(req.salary * 3.8);\r",
							"});\r",
							"\r",
							"pm.test(\"1-5\", function () {\r",
							"    pm.expect(+resp[\"qa_salary_after_1.5_year\"]).to.be.ok;\r",
							"});\r",
							"\r",
							"pm.test(\"3-5\", function () {\r",
							"    pm.expect(+resp[\"qa_salary_after_3.5_years\"]).to.be.ok;\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"start_qa_salary\", function () {\r",
							"    pm.expect(resp.start_qa_salary).to.be.ok;\r",
							"});\r",
							"\r",
							"pm.test(\"EQUALS start_qa_salary\", function () {\r",
							"    pm.expect(resp.start_qa_salary).to.eql(+req.salary);\r",
							"});\r",
							"\r",
							"pm.test(\"qa_salary_after_12_months\", function () {\r",
							"    pm.expect(resp.qa_salary_after_12_months).to.be.ok;\r",
							"});\r",
							"\r",
							"pm.test(\"EQUALS qa_salary_after_12_months\", function () {\r",
							"    pm.expect(resp.qa_salary_after_12_months).to.eql(req.salary * 2.7);\r",
							"});\r",
							"\r",
							"pm.test(\"qa_salary_after_6_months\", function () {\r",
							"    pm.expect(resp.qa_salary_after_6_months).to.be.ok;\r",
							"});\r",
							"\r",
							"pm.test(\"EQUALS qa_salary_after_6_months\", function () {\r",
							"    pm.expect(resp.qa_salary_after_6_months).to.eql(req.salary * 2);\r",
							"});\r",
							"\r",
							"pm.test(\"person\", function () {\r",
							"    pm.expect(resp.person).to.be.ok;\r",
							"});\r",
							"\r",
							"pm.test(\"person param name\", function () {\r",
							"    pm.expect(resp.person.u_name[1]).to.eql(+req.salary);\r",
							"});\r",
							"\r",
							"pm.test(\"person param age\", function () {\r",
							"    pm.expect(resp.person.u_age).to.eql(+req.age);\r",
							"});\r",
							"\r",
							"pm.test(\"u salary 5\", function () {\r",
							"    pm.expect(resp.person.u_salary_5_years).to.eql(req.salary * 4.2);\r",
							"});\r",
							"\r",
							"pm.test(\"Cicle person\", function () {\r",
							"    for (var key in resp.person){\r",
							"        console.log(key, resp.person[key])\r",
							"    }\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "g",
							"type": "text"
						},
						{
							"key": "age",
							"value": "3",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "3",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}/user_info_2?salary=25000&age=28&name=Graf",
					"host": [
						"{{url}}"
					],
					"path": [
						"user_info_2"
					],
					"query": [
						{
							"key": "salary",
							"value": "25000"
						},
						{
							"key": "age",
							"value": "28"
						},
						{
							"key": "name",
							"value": "Graf"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "user info 3",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"var resp = pm.response.json();\r",
							"var req = request.data\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Test name\", function () {\r",
							"    pm.expect(resp.name).to.eql(\"Graf\");\r",
							"});\r",
							"\r",
							"pm.test(\"Test age\", function () {\r",
							"    pm.expect(resp.age).to.eql('28');\r",
							"});\r",
							"\r",
							"pm.test(\"Test salary\", function () {\r",
							"    pm.expect(resp.salary).to.eql(25);\r",
							"});\r",
							"\r",
							"pm.test(\"Test req name\", function () {\r",
							"    pm.expect(resp.name).to.eql(req.name);\r",
							"});\r",
							"\r",
							"pm.test(\"Test req age\", function () {\r",
							"    pm.expect(resp.age).to.eql(req.age);\r",
							"});\r",
							"\r",
							"pm.test(\"Test req salary\", function () {\r",
							"    pm.expect(resp.salary).to.eql(+req.salary);\r",
							"});\r",
							"\r",
							"pm.test(\"Test req salary = sal * 4\", function () {\r",
							"    pm.expect(resp.family.u_salary_1_5_year).to.eql(+req.salary*4);\r",
							"});\r",
							"\r",
							"console.log(\"u salary 1.5 year \" + resp.family.u_salary_1_5_year  + \" family \" + resp.family.children)"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "age",
							"value": "28",
							"type": "text"
						},
						{
							"key": "name",
							"value": "Graf",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "25",
							"type": "text"
						}
					]
				},
				"url": "{{url}}/user_info_3"
			},
			"response": []
		},
		{
			"name": "object info 3",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"var resp = pm.response.json();\r",
							"var req = request.data\r",
							"var reqUrl = pm.request.url.query.toObject()\r",
							"\r",
							"pm.test(\"req name\", function () {\r",
							"    pm.expect(resp.name).to.eql((reqUrl.name));\r",
							"});\r",
							"\r",
							"pm.test(\"req age\", function () {\r",
							"    pm.expect(resp.age).to.eql((reqUrl.age));\r",
							"});\r",
							"\r",
							"pm.test(\"req salary\", function () {\r",
							"    pm.expect(resp.salary).to.eql(+reqUrl.salary);\r",
							"});\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"name\", function () {\r",
							"    pm.expect(resp.name).to.eql(\"Graf\");\r",
							"});\r",
							"\r",
							"pm.test(\"age\", function () {\r",
							"    pm.expect(resp.age).to.eql('28');\r",
							"});\r",
							"\r",
							"pm.test(\"salary\", function () {\r",
							"    pm.expect(resp.salary).to.eql(25000);\r",
							"});\r",
							"\r",
							"pm.test(\"dog name\", function () {\r",
							"    pm.expect(resp.family.pets.dog.name).to.be.have;\r",
							"});\r",
							"\r",
							"pm.test(\"dog age\", function () {\r",
							"    pm.expect(resp.family.pets.dog.age).to.be.have;\r",
							"});\r",
							"\r",
							"pm.test(\"Luky name dog test\", function () {\r",
							"    pm.expect(resp.family.pets.dog.name).to.eql(\"Luky\");\r",
							"});\r",
							"\r",
							"pm.test(\"Luky age dog test\", function () {\r",
							"    pm.expect(resp.family.pets.dog.age).to.eql(4);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": []
				},
				"url": {
					"raw": "{{url}}/object_info_3?age=28&name=Graf&salary=25000",
					"host": [
						"{{url}}"
					],
					"path": [
						"object_info_3"
					],
					"query": [
						{
							"key": "age",
							"value": "28"
						},
						{
							"key": "name",
							"value": "Graf"
						},
						{
							"key": "salary",
							"value": "25000"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "object info 4",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"var resp = pm.response.json();\r",
							"var req = request.data\r",
							"var reqUrl = pm.request.url.query.toObject()\r",
							"\r",
							"pm.test(\"req name\", function () {\r",
							"    pm.expect(resp.name).to.eql((reqUrl.name));\r",
							"});\r",
							"\r",
							"pm.test(\"req age\", function () {\r",
							"    pm.expect(resp.age).to.eql((+reqUrl.age));\r",
							"});\r",
							"\r",
							"// console.log(reqUrl.salary)\r",
							"// console.log(resp.salary[0])\r",
							"// console.log(resp.salary[1])\r",
							"// console.log(resp.salary[2])\r",
							"\r",
							"pm.test(\"salary[0]\", function () {\r",
							"    pm.expect(+resp.salary[0]).to.eql(+reqUrl.salary);\r",
							"});\r",
							"\r",
							"pm.test(\"salary[1]\", function () {\r",
							"    pm.expect(+resp.salary[1]).to.eql(reqUrl.salary*2);\r",
							"});\r",
							"\r",
							"pm.test(\"salary[3]\", function () {\r",
							"    pm.expect(+resp.salary[2]).to.eql(+reqUrl.salary*3);\r",
							"});\r",
							"\r",
							"var i =0\r",
							"while(i<3) {\r",
							"    if(i==resp.salary.length) {break}\r",
							"    console.log(resp.salary[i])\r",
							"    i++\r",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": []
				},
				"url": {
					"raw": "{{url}}/object_info_4?age={{age}}&name={{name}}&salary={{salary}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"object_info_4"
					],
					"query": [
						{
							"key": "age",
							"value": "{{age}}"
						},
						{
							"key": "name",
							"value": "{{name}}"
						},
						{
							"key": "salary",
							"value": "{{salary}}"
						}
					]
				}
			},
			"response": []
		}
	]
}